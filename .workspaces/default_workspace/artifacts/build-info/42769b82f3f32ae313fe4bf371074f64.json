{
	"id": "42769b82f3f32ae313fe4bf371074f64",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"variables-and-types.sol": {
				"content": "/*\r\nvariable = memory locations where we store values\r\n\r\nvariable = value\r\n\r\n3 most important types of variables: \r\nkeyword: [bool] booleans =  true/false   \r\nkeyword: [uint] integers = signed and unsigned integers of varying sizes\r\nkeyword: [string] strings = string\r\n*/\r\n\r\n// lieDetector = boolean to check if true or false\r\n// walletAmount = integer that would hold the amount\r\n// errorMessageText = string\r\n\r\ncontract learnVariables {\r\n    // all our solidity code\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"variables-and-types.sol": {
				"learnVariables": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"variables-and-types.sol\":413:471  contract learnVariables {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"variables-and-types.sol\":413:471  contract learnVariables {\r... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122080082c06cb63de9ac3a53b089e2e60d29fd3a0124e85bd01040fa4afbbd67ca764736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea264697066735822122080082c06cb63de9ac3a53b089e2e60d29fd3a0124e85bd01040fa4afbbd67ca764736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 ADDMOD 0x2C MOD 0xCB PUSH4 0xDE9AC3A5 EXTCODESIZE ADDMOD SWAP15 0x2E PUSH1 0xD2 SWAP16 0xD3 LOG0 SLT 0x4E DUP6 0xBD ADD DIV 0xF LOG4 0xAF 0xBB 0xD6 PUSH29 0xA764736F6C634300080700330000000000000000000000000000000000 ",
							"sourceMap": "413:58:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea264697066735822122080082c06cb63de9ac3a53b089e2e60d29fd3a0124e85bd01040fa4afbbd67ca764736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 ADDMOD 0x2C MOD 0xCB PUSH4 0xDE9AC3A5 EXTCODESIZE ADDMOD SWAP15 0x2E PUSH1 0xD2 SWAP16 0xD3 LOG0 SLT 0x4E DUP6 0xBD ADD DIV 0xF LOG4 0xAF 0xBB 0xD6 PUSH29 0xA764736F6C634300080700330000000000000000000000000000000000 ",
							"sourceMap": "413:58:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 413,
									"end": 471,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 413,
									"end": 471,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 413,
									"end": 471,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 413,
									"end": 471,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 413,
									"end": 471,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 413,
									"end": 471,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 413,
									"end": 471,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 413,
									"end": 471,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 413,
									"end": 471,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 413,
									"end": 471,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 413,
									"end": 471,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 413,
									"end": 471,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 413,
									"end": 471,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 413,
									"end": 471,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 413,
									"end": 471,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 413,
									"end": 471,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 413,
									"end": 471,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 413,
									"end": 471,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 413,
									"end": 471,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 413,
									"end": 471,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 413,
									"end": 471,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122080082c06cb63de9ac3a53b089e2e60d29fd3a0124e85bd01040fa4afbbd67ca764736f6c63430008070033",
									".code": [
										{
											"begin": 413,
											"end": 471,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 413,
											"end": 471,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 413,
											"end": 471,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 413,
											"end": 471,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 413,
											"end": 471,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 413,
											"end": 471,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"variables-and-types.sol\":\"learnVariables\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"variables-and-types.sol\":{\"keccak256\":\"0x2f59e8caf4bc45c18c8eda8ba8759492520839e64808bd39251eb157a27a88a4\",\"urls\":[\"bzz-raw://27e5f13d0c376bceb43729d627849b083770133f9e922373414814c5e2cd5d63\",\"dweb:/ipfs/QmVVDYHjvk6tnShy7Tafov7oPeoTQzpAqE4k8hqPJNt91X\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> variables-and-types.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "variables-and-types.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "3420",
				"formattedMessage": "Warning: Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.7;\"\n--> variables-and-types.sol\n\n",
				"message": "Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.7;\"",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "variables-and-types.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"variables-and-types.sol": {
				"ast": {
					"absolutePath": "variables-and-types.sol",
					"exportedSymbols": {
						"learnVariables": [
							1
						]
					},
					"id": 2,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1,
							"linearizedBaseContracts": [
								1
							],
							"name": "learnVariables",
							"nameLocation": "422:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 2,
							"src": "413:58:0",
							"usedErrors": []
						}
					],
					"src": "413:58:0"
				},
				"id": 0
			}
		}
	}
}